<?php

/**
 * @file
 * This is the select2_publish module.
 */

use Drupal\Core\Entity\EntityPublishedInterface;

/**
 * Implements hook_element_info_alter().
 */
function select2_publish_element_info_alter(array &$info) {
  if (!empty($info['select2'])) {
    $info['select2']['#pre_render'][] = 'select2_publish_add_status_properties';
  }
}

/**
 * Attach status properties to the render element.
 */
function select2_publish_add_status_properties($element) {
  if ($element['#target_type']) {
    $entity_manager = \Drupal::entityTypeManager();
    $entity_definition = $entity_manager->getDefinition($element['#target_type']);

    if (!$entity_definition->entityClassImplements(EntityPublishedInterface::class)) {
      return $element;
    }

    $entity_storage = $entity_manager->getStorage($element['#target_type']);
    /** @var \Drupal\Core\Entity\EntityPublishedInterface $entity */
    foreach ($entity_storage->loadMultiple(array_keys($element['#options'])) as $id => $entity) {
      $element['#options_attributes'][$id]['data-published'] = $entity->isPublished() ? 'true' : 'false';
    }

    $default_status = 'true';
    if ($element['#autocreate']) {
      /** @var \Drupal\Core\Entity\EntityPublishedInterface $entity */
      $entity = $entity_storage->create([$entity_definition->getKey('bundle') => $element['#autocreate']['bundle']]);
      $default_status = $entity->isPublished() ? 'true' : 'false';
    }

    $element['#attached']['library'][] = 'select2_publish/select2.publish';
    $element['#attributes']['data-select2-publish-default'] = $default_status;
  }
  return $element;
}

/**
 * Implements hook_select2_autocomplete_matches_alter().
 */
function select2_publish_select2_autocomplete_matches_alter(array &$matches, array $options) {
  $entity_manager = \Drupal::entityTypeManager();
  $entity_definition = $entity_manager->getDefinition($options['target_type']);

  if (!$entity_definition->entityClassImplements(EntityPublishedInterface::class)) {
    return;
  }

  $entities = $entity_manager->getStorage($options['target_type'])->loadMultiple(array_keys($matches));
  /** @var \Drupal\Core\Entity\EntityPublishedInterface $entity */
  foreach ($entities as $id => $entity) {
    $matches[$id]['published'] = $entity->isPublished();
  }
}
